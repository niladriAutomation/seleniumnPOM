<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-12-22T10:32:06Z" name="Suite" finished-at="2020-12-22T10:33:21Z" duration-ms="75113">
    <groups>
    </groups>
    <test started-at="2020-12-22T10:32:06Z" name="Test" finished-at="2020-12-22T10:33:21Z" duration-ms="75113">
      <class name="AutomationPractice.MachineTest.SigninTest">
        <test-method is-config="true" signature="launchbrowser()[pri:0, instance:AutomationPractice.MachineTest.SigninTest@2812b107]" started-at="2020-12-22T10:32:06Z" name="launchbrowser" finished-at="2020-12-22T10:32:19Z" duration-ms="13194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method signature="Valid_registration()[pri:1, instance:AutomationPractice.MachineTest.SigninTest@2812b107]" started-at="2020-12-22T10:32:19Z" name="Valid_registration" finished-at="2020-12-22T10:32:31Z" duration-ms="11205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Valid_registration -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:AutomationPractice.MachineTest.SigninTest@2812b107]" started-at="2020-12-22T10:32:31Z" name="teardown" finished-at="2020-12-22T10:32:31Z" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- AutomationPractice.MachineTest.SigninTest -->
      <class name="AutomationPractice.MachineTest.UpdatePersonalInformationTest">
        <test-method is-config="true" signature="launchbrowser()[pri:0, instance:AutomationPractice.MachineTest.UpdatePersonalInformationTest@df6620a]" started-at="2020-12-22T10:32:31Z" name="launchbrowser" finished-at="2020-12-22T10:32:41Z" duration-ms="10804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method signature="updatepersonalinfo()[pri:2, instance:AutomationPractice.MachineTest.UpdatePersonalInformationTest@df6620a]" started-at="2020-12-22T10:32:41Z" name="updatepersonalinfo" finished-at="2020-12-22T10:32:50Z" duration-ms="8893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatepersonalinfo -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:AutomationPractice.MachineTest.UpdatePersonalInformationTest@df6620a]" started-at="2020-12-22T10:32:50Z" name="teardown" finished-at="2020-12-22T10:32:50Z" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- AutomationPractice.MachineTest.UpdatePersonalInformationTest -->
      <class name="AutomationPractice.MachineTest.CreateToManageWishlistTest">
        <test-method is-config="true" signature="launchbrowser()[pri:0, instance:AutomationPractice.MachineTest.CreateToManageWishlistTest@4e31276e]" started-at="2020-12-22T10:32:50Z" name="launchbrowser" finished-at="2020-12-22T10:33:01Z" duration-ms="10662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method signature="createToManageWishlist()[pri:3, instance:AutomationPractice.MachineTest.CreateToManageWishlistTest@4e31276e]" started-at="2020-12-22T10:33:01Z" name="createToManageWishlist" finished-at="2020-12-22T10:33:21Z" duration-ms="20124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createToManageWishlist -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:AutomationPractice.MachineTest.CreateToManageWishlistTest@4e31276e]" started-at="2020-12-22T10:33:21Z" name="teardown" finished-at="2020-12-22T10:33:21Z" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- AutomationPractice.MachineTest.CreateToManageWishlistTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
  <suite started-at="2020-12-22T10:35:31Z" name="fourSuite" finished-at="2020-12-22T10:36:01Z" duration-ms="29259">
    <groups>
    </groups>
    <test started-at="2020-12-22T10:35:31Z" name="FourTest" finished-at="2020-12-22T10:36:01Z" duration-ms="29259">
      <class name="AutomationPractice.MachineTest.BlankSearchTest">
        <test-method is-config="true" signature="launchbrowser()[pri:0, instance:AutomationPractice.MachineTest.BlankSearchTest@7b8b43c7]" started-at="2020-12-22T10:35:31Z" name="launchbrowser" finished-at="2020-12-22T10:35:42Z" duration-ms="10442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method signature="blanksearch()[pri:10, instance:AutomationPractice.MachineTest.BlankSearchTest@7b8b43c7]" started-at="2020-12-22T10:35:42Z" name="blanksearch" finished-at="2020-12-22T10:35:43Z" duration-ms="1672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blanksearch -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:AutomationPractice.MachineTest.BlankSearchTest@7b8b43c7]" started-at="2020-12-22T10:35:43Z" name="teardown" finished-at="2020-12-22T10:35:44Z" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- AutomationPractice.MachineTest.BlankSearchTest -->
      <class name="AutomationPractice.MachineTest.BlankRegisterTest">
        <test-method is-config="true" signature="launchbrowser()[pri:0, instance:AutomationPractice.MachineTest.BlankRegisterTest@7aaca91a]" started-at="2020-12-22T10:35:44Z" name="launchbrowser" finished-at="2020-12-22T10:35:53Z" duration-ms="9758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method signature="blankregister()[pri:11, instance:AutomationPractice.MachineTest.BlankRegisterTest@7aaca91a]" started-at="2020-12-22T10:35:53Z" name="blankregister" finished-at="2020-12-22T10:36:01Z" duration-ms="7261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- blankregister -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:AutomationPractice.MachineTest.BlankRegisterTest@7aaca91a]" started-at="2020-12-22T10:36:01Z" name="teardown" finished-at="2020-12-22T10:36:01Z" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- AutomationPractice.MachineTest.BlankRegisterTest -->
    </test> <!-- FourTest -->
  </suite> <!-- fourSuite -->
  <suite started-at="2020-12-22T10:33:21Z" name="TwoSuite" finished-at="2020-12-22T10:34:48Z" duration-ms="87127">
    <groups>
    </groups>
    <test started-at="2020-12-22T10:33:21Z" name="TwoTest" finished-at="2020-12-22T10:34:48Z" duration-ms="87127">
      <class name="AutomationPractice.MachineTest.ManageOrderTest">
        <test-method is-config="true" signature="launchbrowser()[pri:0, instance:AutomationPractice.MachineTest.ManageOrderTest@13d4992d]" started-at="2020-12-22T10:34:12Z" name="launchbrowser" finished-at="2020-12-22T10:34:23Z" duration-ms="10451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method signature="manageorder()[pri:5, instance:AutomationPractice.MachineTest.ManageOrderTest@13d4992d]" started-at="2020-12-22T10:34:23Z" name="manageorder" finished-at="2020-12-22T10:34:34Z" duration-ms="11443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- manageorder -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:AutomationPractice.MachineTest.ManageOrderTest@13d4992d]" started-at="2020-12-22T10:34:34Z" name="teardown" finished-at="2020-12-22T10:34:34Z" duration-ms="60" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- AutomationPractice.MachineTest.ManageOrderTest -->
      <class name="AutomationPractice.MachineTest.SearchTest">
        <test-method is-config="true" signature="launchbrowser()[pri:0, instance:AutomationPractice.MachineTest.SearchTest@302f7971]" started-at="2020-12-22T10:34:34Z" name="launchbrowser" finished-at="2020-12-22T10:34:44Z" duration-ms="9803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method signature="validsearch()[pri:6, instance:AutomationPractice.MachineTest.SearchTest@302f7971]" started-at="2020-12-22T10:34:44Z" name="validsearch" finished-at="2020-12-22T10:34:48Z" duration-ms="4389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validsearch -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:AutomationPractice.MachineTest.SearchTest@302f7971]" started-at="2020-12-22T10:34:48Z" name="teardown" finished-at="2020-12-22T10:34:48Z" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- AutomationPractice.MachineTest.SearchTest -->
      <class name="AutomationPractice.MachineTest.SearchProdToMangOrdToRegisToUpdateAddrsToPlacOrderTest">
        <test-method is-config="true" signature="launchbrowser()[pri:0, instance:AutomationPractice.MachineTest.SearchProdToMangOrdToRegisToUpdateAddrsToPlacOrderTest@5082d622]" started-at="2020-12-22T10:33:21Z" name="launchbrowser" finished-at="2020-12-22T10:33:33Z" duration-ms="11491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method signature="SearchToOrderPlaceUpdateAddress()[pri:4, instance:AutomationPractice.MachineTest.SearchProdToMangOrdToRegisToUpdateAddrsToPlacOrderTest@5082d622]" started-at="2020-12-22T10:33:33Z" name="SearchToOrderPlaceUpdateAddress" finished-at="2020-12-22T10:34:12Z" duration-ms="39400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchToOrderPlaceUpdateAddress -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:AutomationPractice.MachineTest.SearchProdToMangOrdToRegisToUpdateAddrsToPlacOrderTest@5082d622]" started-at="2020-12-22T10:34:12Z" name="teardown" finished-at="2020-12-22T10:34:12Z" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- AutomationPractice.MachineTest.SearchProdToMangOrdToRegisToUpdateAddrsToPlacOrderTest -->
    </test> <!-- TwoTest -->
  </suite> <!-- TwoSuite -->
  <suite started-at="2020-12-22T10:34:48Z" name="ThreeSuite" finished-at="2020-12-22T10:35:31Z" duration-ms="42787">
    <groups>
    </groups>
    <test started-at="2020-12-22T10:34:48Z" name="ThreeTest" finished-at="2020-12-22T10:35:31Z" duration-ms="42787">
      <class name="AutomationPractice.MachineTest.DuplicaRegistrationTest">
        <test-method is-config="true" signature="launchbrowser()[pri:0, instance:AutomationPractice.MachineTest.DuplicaRegistrationTest@68d279ec]" started-at="2020-12-22T10:35:00Z" name="launchbrowser" finished-at="2020-12-22T10:35:10Z" duration-ms="9639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method signature="duplicate_registration()[pri:8, instance:AutomationPractice.MachineTest.DuplicaRegistrationTest@68d279ec]" started-at="2020-12-22T10:35:10Z" name="duplicate_registration" finished-at="2020-12-22T10:35:13Z" duration-ms="3235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- duplicate_registration -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:AutomationPractice.MachineTest.DuplicaRegistrationTest@68d279ec]" started-at="2020-12-22T10:35:13Z" name="teardown" finished-at="2020-12-22T10:35:13Z" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- AutomationPractice.MachineTest.DuplicaRegistrationTest -->
      <class name="AutomationPractice.MachineTest.CheckUpdateinvalidPersonalInfoTest">
        <test-method is-config="true" signature="launchbrowser()[pri:0, instance:AutomationPractice.MachineTest.CheckUpdateinvalidPersonalInfoTest@14f9390f]" started-at="2020-12-22T10:35:13Z" name="launchbrowser" finished-at="2020-12-22T10:35:23Z" duration-ms="10497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method signature="checkblankupdatepersonalinfo()[pri:9, instance:AutomationPractice.MachineTest.CheckUpdateinvalidPersonalInfoTest@14f9390f]" started-at="2020-12-22T10:35:23Z" name="checkblankupdatepersonalinfo" finished-at="2020-12-22T10:35:31Z" duration-ms="7755" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [There is 1 error
The password you entered is incorrect.] but found [There is 1 error %n The password you entered is incorrect.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [There is 1 error
The password you entered is incorrect.] but found [There is 1 error %n The password you entered is incorrect.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at AutomationPractice.MachineTest.CheckUpdateinvalidPersonalInfoTest.checkblankupdatepersonalinfo(CheckUpdateinvalidPersonalInfoTest.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1204)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkblankupdatepersonalinfo -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:AutomationPractice.MachineTest.CheckUpdateinvalidPersonalInfoTest@14f9390f]" started-at="2020-12-22T10:35:31Z" name="teardown" finished-at="2020-12-22T10:35:31Z" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- AutomationPractice.MachineTest.CheckUpdateinvalidPersonalInfoTest -->
      <class name="AutomationPractice.MachineTest.InvalidSearchTest">
        <test-method is-config="true" signature="launchbrowser()[pri:0, instance:AutomationPractice.MachineTest.InvalidSearchTest@258d79be]" started-at="2020-12-22T10:34:48Z" name="launchbrowser" finished-at="2020-12-22T10:34:58Z" duration-ms="9752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchbrowser -->
        <test-method signature="invalidSearch()[pri:7, instance:AutomationPractice.MachineTest.InvalidSearchTest@258d79be]" started-at="2020-12-22T10:34:58Z" name="invalidSearch" finished-at="2020-12-22T10:35:00Z" duration-ms="1738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidSearch -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:AutomationPractice.MachineTest.InvalidSearchTest@258d79be]" started-at="2020-12-22T10:35:00Z" name="teardown" finished-at="2020-12-22T10:35:00Z" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- AutomationPractice.MachineTest.InvalidSearchTest -->
    </test> <!-- ThreeTest -->
  </suite> <!-- ThreeSuite -->
  <suite started-at="2020-12-22T10:36:01Z" name="MasterSuite" finished-at="2020-12-22T10:36:01Z" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- MasterSuite -->
</testng-results>
